"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список
только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами
выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
соответствующее сообщение. При этом работа скрипта не должна завершаться."""


class MyException(Exception):
    def __init__(self, i_symbol):
        self.__symbol = i_symbol

    def __str__(self):
        return f"Введенный символ {self.__symbol} типа {type(self.__symbol)}"


list_numb = []
elem = input("Введите символ или напишите \"Стоп\", если формирование списка завершено:  ")
while elem.capitalize() != "Стоп":
    try:
        if elem.isdigit():
            list_numb.append(elem)
            print("Список готов: " + str(list_numb))
        else:
            raise MyException(elem)
    except MyException as Error:
        print(Error)
    finally:
        elem = input("Введите символ или напишите \"Стоп\", если формирование списка завершено:  ")

print("Итоговый список чисел: " + str(list_numb))
